<html>
<head>
    <title>Bill Blondeau Workplace Practices</title>
    <link rel='stylesheet' type='text/css' href='../css/common.css'/>
</head>
<body>
    <div class='wrapper'>
        <p>
        <a href='http://billblondeau.com'>billblondeau.com</a> home
        </p>
        <p class='instruct'>If your workflow requires a copy of this page, the simplest way is to copy everything below the line and paste it into a word processing doc. If you would prefer that I generate one for you, email me at <a href='mailto:whblondeau@gmail.com'>whblondeau@gmail.com</a>. I'll happily and promptly send it.</p>
        <hr/>
        
        
        <h1>Bill Blondeau Workplace Practices</h1>
        <div class='contact-info'>
            <p>Bill Blondeau</p>
            <p>122 N. 6th St.</p>
            <p>Madison, WI 53704</p>
            <p><a href='mailto:whblondeau.com'>whblondeau@gmail.com</a></p>
            <p><a href='http://billblondeau.com'>http://billblondeau.com</a></p>
            <p>References upon request.</p>
        </div>
        
        
        <a name='general_observations_and_guidance'></a>
        <h2>General observations and guidance</h2>
        <p class='explanation'>
        I've seen a lot. Some of it took a long time to register, to analyze, to puzzle over. Here are some of the most useful insights.
        </p>
        <ul>
            <li><strong>Treating coworkers decently is a key form of cost containment.</strong> Really. Whenever you do or say something&mdash;intentionally or not&mdash;that makes a coworker's day worse, you have just done something more than injured a person's feelings. You have imposed a cost on the organization's productivity. That cost may in fact propagate, may take on a life of its own.</li>

            <li><strong>Everybody underestimates the cost and impact of technical debt.</strong> Technical debt occurs in requirements analysis, architecture, design, code; in documentation or the lack of it; in testing or the lack of it; in user experience elements. It always ends up taking longer and costing more than anybody expects. <span class='attn'>I fight for <strong>technical solvency:</strong> the control and reduction of technical debt.</span></li>

            <a name='slow-is-smooth-smooth-is-fast'></a>
            <li>
                <p>
                <strong>Slow is smooth, smooth is fast.</strong> I've seen this again and again: attempts to force the pace of development (aggressive underestimation, coercive deadlines, pressure to work lots of overtime, etc.) tend to create unfortunate amounts of wasted motion. <span class='attn'>Haste generally damages outcomes.</span>
                </p>
                <p>
                And, ironically, <span class='attn'>haste tends to slow things down overall.</span> Deadlines are widely thought to provide focus; in my experience, rather than clarifying, they mainly just complicate the decision matrix. ("Can I afford this shortcut?")
                </p>
            </li>
        </ul>


        <a name='things_i_learned_as_a_consultant'></a>
        <h2>Things I learned as a consultant</h2>
        <p class='explanation'>
        I worked as a consultant for most of my career. Being a consultant is a somewhat different thing than being a staff employee. The lessons drawn from the difference are significant.
        </p>
        <ul>
            <li>A consultant is more of a collaborator, and less of a subordinate, than staff employees tend to be. Habits learned as a consultant show up reliably in how I conduct myself, in either role. <strong>My workplace stance is collaborative.</strong> Even&mdash;especially&mdash;in my interactions with bosses. In particular, I provide decision support whenever I see the likelihood that someone will benefit.
            </li>

            <li>"Sometimes the final value a consultant can give a client is to shoulder <em>all</em> of the blame and carry it out the door." <em>&mdash;Cap Gemini onboarding training</em></li>

            <li>There are two general kinds of consultants: the kind that <span class='attn'>hoards</span> knowledge in order to become indispensable, and the kind that <span class='attn'>gives knowledge away with both hands</span> so as to be freed up for the next cool thing. Three guesses which way I went... I never looked back. I help my coworkers learn anything they want to learn.</li>
        </ul>


        <a name='kind_of_programmer_i_am'></a>
        <h2>Kind of programmer I am</h2>
        <p class='explanation'>
        This is weighted towards work as a software developer, but illuminates any kind of job I do. Some of the principles apply to work in general.
        </p>
        <ul>
            <li>I'd rather design my way out of a code problem than code my way out of a design problem.</li>

            <li>Treating coworkers with respect is more important than winning the language war or platform war or the struggle over paradigm.</li>

            <li>I believe code is read more often than it's written, so clarity pays off. <strong>I write code to be clearly readable. I leave useful inline comments. I document my projects.</strong></li>

            <li>I believe testing works best when it's a three-legged stool:
            <ul>
                <li>Behavioral or definitional testing that declares what the application does at the top level;</li>

                <li>unit testing;</li>

                <li>proper composition of tested units. Especially if it's declarative / functional composition.</li>
            </ul>
            </li>

            <li>I'll take declarative over imperative, whenever I can get it.</li>

            <li>I like peer review and I want it. Yeah, everybody's busy, but I want it.</li>

            <li>I dislike stunt coding, and try to avoid it even when i'm feeling brash.</li>

        </ul>
        
    </div>
</body>
</html>

