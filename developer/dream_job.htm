<html>
<head>
    <title>Bill Blondeau, Developer and Information Mechanic</title>
    <link rel='stylesheet' type='text/css' href='../css/common.css'/>
</head>
<body>
<div class='wrapper'>
        <p>
        <a href='../index.htm'>home</a>
        </p>
        <p class='instruct'>If your workflow requires a copy of this resum&#x00E9;, the simplest way is to copy everything below the line and paste it into a word processing document. If you would prefer that I generate one for you, email me at <a href='mailto:whblondeau@gmail.com'>whblondeau@gmail.com</a>. I'll happily and promptly send it.</p>
        <hr/>
        <h1>Bill Blondeau R&#x00E9;sum&#x00E9;: Python Developer &amp; Information Mechanic</h1>
        <div class='contact-info'>
            <p>122 N. 6th St.</p>
            <p>Madison, WI 53704</p>
            <p><a href='mailto:whblondeau@gmail.com'>whblondeau@gmail.com</a></p>
            <p>References upon request.</p>
        </div>

        <p>
        <em>Note: <strong>this is a blue-sky optimistic r&#x00E9;sum&#x00E9;. It's a dream job.</strong> I can do other kinds of work&mdash;and do them well&mdash;but this is targeted at the kind of thing I'd really like to be doing.</em>
        </p>
        <p>
        Developer, strong preference for Python, strong preference for the back end. Data Mechanic. Information Architect. Technical Writer.
        </p>
        <p>
        Twenty years of professional and entrepreneurial experience.
        </p>

        <h2>Preface: experience &amp; skills relevant to SIPS Programmer at SSEC</h2>
        <p class='explanation'>As a convenience, to save anyone from having to dig through my distributed documentation: here's an overview of my matches for the stated position requirements.</p>
        <h3>Required:</h3>
        <ul>
            <li><strong>Experience developing and maintaining software systems in Python</strong>
                <p>
                Yes.
                </p>
                <p>
                I reviewed my <a href='http://billblondeau.com/project_hist/software_project_history.htm'>project history</a> and found eighteen projects that used Python. Some of these were large, some small. Some were purely, or primarily, Python; others included Python as one of several languages. I've used Python for other work that didn't make the cut to get into my history. Python has been my go-to for ten or twelve years now.
                </p>
                <p>
                For what it's worth, I've developed a strong preference in Python for the pure functional style, when I can use it. I'm also comfortable with OO and with structured scripting (although the functional style emerges in any nontrivial scripts I write.)
                </p>
            </li>
            <li><strong>Familiarity with the Linux programming environment, including knowledge of operating system concepts and command-line / scripting proficiency</strong>
                <p>
                Yes.
                </p>
                <p>
                I have used Linux personally since 2002. At work I have used Linux and, occasionally, workalikes (MacOSX on one laptop, and Cygwin so I could get serious work done on mandated Windows) since 2004, with very few, very brief lapses. And by Linux I mean the CLI.
                </p>
                <p>
                I'm familiar with the ordinary commands, and frequently use things like <code>tar</code>, <code>curl</code>, <code>tee</code>, <code>ssh</code>, <code>scp</code> and <code>rsync</code>. Most of my system admin work has been with <code>top</code>, <code>ps</code>, <code>systemd</code>, and <code>systemctl</code>. Things I'd like to learn: I consider my experience with <code>screen</code> and <code>xargs</code> to be meager, and know little about <code>sed</code> or <code>awk</code>.
                </p>
                <p>
                Also, not to start any quarrels but just to be honest: <code>vim</code> not <code>emacs</code>.
                </p>
                <p>
                My favorite distro is Debian; I've also used (or am still using) Fedora, Red Hat, OpenSUSE, and Ubuntu.
                </p>
            </li>
            <li><strong>SQL database programming experience with a DBMS, preferably PostgreSQL</strong>
                <p>
                Yes.
                </p>
                <p>
                This is another strong one. I have used SQL and DDL since 1997. SQL was the first serious language I ever learned, and it's like riding a bicycle&mdash;I've never forgotten it.
                </p>
                <p>
                I use Postgres by preference. My current job uses MySQL. I have used Oracle, MS SQL Server, and Sybase on major projects.
                </p>
                <p>
                I can design effective, resilient data schemas. I can implement them in DDL for the platform of choice. I can write efficient queries in SQL, and process them efficiently in code. I can troubleshoot long-running queries or peculiar results. I do understand indexing, and I can deal easily with complicated joins (full or outer).
                </p>
                <p>
                I am not a DBA. But I am a very effective SQL developer.
                </p>
            </li>
            <li><strong>A solid foundation in software engineering practices including use of version control (git), software testing, and creation and maintenance of developer documentation and user manuals</strong>
                <p>
                Yes.
                </p>
                <p>
                About git, I can say that in my current job the workflow has me routinely using <code>rebase</code> and <code>branch --set-upstream-to</code>; and occasionally <code>cherry-pick</code> to fix the signal-to-noise ratio when I've unwisely used fetch and pull. <code>git log</code> is my particular friend.
                </p>
                <p>
                As regards software testing, I've done less unit testing than I'd like, mainly because 1) some workplaces don't want to spend time on tests, and 2) I haven't been authorized to do as much pure functional programming as I'd like, and I'm That Guy who, when out drinking with coworkers, generously educates the entire bar about how "There is no algebra of state." Unit tests on pure (stateless)functions are compellingly powerful, because you can reason formally about the results. 
                </p>
                <p>
                I have, however, been able to talk my way into writing behavioral or definitional tests using the Gherkin language. (In Python, that's the test framework called "Lettuce"; possibly others by now.) This is, in my experience, very valuable. It connects explicit tests of outcomes to specific inputs and conditions, using human-readable syntax.
                </p>
                <p>
                When it comes to technical documentation: I was a technical writer before I was a programmer. And I still do it.
                </p>
                <p>
                My portfolio of written work is <a href='http://billblondeau.com/techwriter/writing_portfolio.htm'>here</a>. I also have a pair of articles about technical writing practices: <a href='http://billblondeau.com/techwriter/good_technical_writing.htm'>What makes for good technical writing?</a> and <a href='http://billblondeau.com/techwriter/analytical_writing.html'>Practical Analytical Writing</a>. They may be useful (or at least interesting).
                </p>
            </li>
            <li><strong>Scientific programming and data visualization experience using tools like the Python / NumPy / Matplotlib ecosystem or alternatives like R or MATLAB</strong>
                <p>
                No.
                </p>
                <p>
                This would be my longest learning curve out of all of the Required competences. I like this sort of thing as a discipline: when your majors include Physics and Art, you're bound to do a lot of visualization of data and models, if only in your head; but I haven't, at time of writing, used any of these tools.
                </p>
                <p>
                I'd love to learn them, but honestly we have to count this&mdash;strictly interpreted as prior experience&mdash;as a No.
                </p>
            </li>
        </ul>
        <h3>Preferred:</h3>
        <ul>
            <li><strong>A background in cluster computing using batch systems like HTCondor and distributed file systems like Ceph</strong>
                <p>
                No.
                </p>
                <p>
                None of them. Intrigued, though.
                </p>
            </li>
            <li><strong>Experience with message-oriented systems built with RabbitMQ or similar technologies</strong>
                <p>
                A definite Yes.
                </p>
                <p>
                When working at the State Consolidated Court Automation Program in 2003-2005, I was tasked with extending and maintaining their messaging system. It was completely queue-based&mdash;in fact, it may have been the first working implementation of the <a href='https://en.wikipedia.org/wiki/Java_Message_Service'>JMS</a> specification on the planet&mdash;and I was deeply impressed by how startlingly effective and bulletproof it was. I grokked queue architectures quickly, and embarked on a career-long crusade in favor of queues everywhere.
                </p>
                <p>
                I've written lightweight queueing systems in Python. I was aware of RabbitMQ, but I wanted to do the work as an exercise in maximal effective austerity. Also, I have a soft spot for 80% solutions.
                </p>
            </li>
            <li><strong>Front- and back- end web application development skills including client-side programming in Javascript</strong>
                <p>
                Um... it's complicated...
                </p>
                <p>
                I know HTML, HTML5, XHTML. I know the DOM pretty well.
                </p>
                <p>
                I'm good with CSS. I wrote <a href='http://billblondeau.com//project_hist/software_project_history.htm#slam'>a formatting language that compiled to HTML+CSS</a>, to make writing of numerous user-facing forms tractable. And I still fix some awkward, nontrivial CSS bug tickets.
                </p>
                <p>
                I know JavaScript, better than I ever really wanted to. I'm happy to write NodeJS code, for example. (Although, when you've got Python for the back end, JavaScript seems kind of pointless.)
                </p>
                <p>
                But I honestly dislike the directions that modern front-end JavaScript has taken. Without going into detail, I'll just say that I'd prefer not to do any of that as part of my job.
                </p>
            </li>
        </ul>

        <h2>Kinds of work I do</h2>
        <p class='explanation'>Things I'm particularly good with, or interested in.</p>
        <ul>
            <li>Back-end work in Python, bash</li>
            <li>Relational databases / SQL / DDL</li>
            <li>Data Management and Governance</li>
            <li>DevOps work (see <a href='http://billblondeau.com#devops_description'>these remarks</a>)
            <li>All things XML or JSON</li>
            <li>Web Development</li>
            <li>Web Service design, including</li>
            <ul>
                <li>Microservices architecture</li>
                <li>Rest/Hypermedia APIs</li>
            </ul>
            <li>Technical writing / Documentation (portfolio <a href='../techwriter/writing_portfolio.htm' target='_blank'>here</a> if you're interested)</li>
            <li>Information Design</li>
        </ul>

        <h2>Languages</h2>
        <ul>
            <li>Python</li>
            <li>SQL and DDL</li>
            <li>bash</li>
            <li>XML and its domain languages (Xpath, XSLT, XQuery, XML Schema)</li>
            <li>Java</li>
            <li>JavaScript (strong preference for the back end)</li>
            <li>HTML5 / XHTML / CSS3 / SASS</li>
        </ul>

        <h2>Development Tools</h2>
        <p class='explanation'>I use others, and have seldom had a difficult time learning any needed tool. These are the ones I know well, right now.</p>
        <ul>
            <li>Unix / Linux command line</li>
            <li>Git version control &amp; GitHub</li>
            <li>vim</li>
            <li>Sublime Text</li>
            <li>VirtualBox</li>
            <li>NetBeans IDE</li>
        </ul>

        <h2>Infrastructure Tools</h2>
        <ul>
            <li>Jenkins Automation Server</li>
            <li>Ansible</li>
            <li>Nagios system/network monitor</li>
        </ul>


        <h2>Frameworks, servers, libraries, and utilities</h2>
        <p class='explanation'>Some of the most useful and/or interesting things I'm familiar with.</p>
        <ul>
            <li>Flask</li>
            <li>Cucumber and Lettuce BDD frameworks</li>
            <li>Apache Tomcat</li>
            <li>Apache Cocoon</li>
        </ul>

        <h2>Project History</h2>
        <p>
        My software project history is separately published because it's long and detailed: <a href='../project_hist/software_project_history.htm' target='_blank'>http://billblondeau.com/project_hist/software_project_history.htm</a> 
        </p>

        <h2>Employment History</h2>
        <ul>
            <li><a href='https://webcourseworks.com/' target='_blank'>Web Courseworks</a>: December 2017 &mdash; present</li> 
           <li><a href='http://www.musicat.co/the-rabble/' target='_blank'>Rabble</a>: May 2016 &mdash; November 2017</li>
            <li>Anchor and <a href='https://www.oldnational.com/' target='_blank'>Old National</a> Banks: December 2015 &mdash; May 2016</li>
            <li>Freelance Technical and Fiction Writer: April 2015 &mdash; November 2015</li>
            <li><a href='http://cida.usgs.gov/' target='_blank'>US Geological Survey, Center for Integrated Data Analytics</a>: Feb 2013 &mdash; April 2015</li>
            <li><a href='http://bendyworks.com' target='_blank'>Bendyworks Inc</a>: June 2012 &mdash; Dec 2012</li>
            <li><a href='http://beacontechinc.com' target='_blank'>Beacon Technologies Inc</a>: September 2000 &mdash; March 2012</li>
            <li>Keane Inc (now a subsidiary of <a href='http://americas.nttdata.com/Services/Services.aspx' target='_blank'>NTT DATA</a>): May 2000 &mdash; August 2000</li>
            <li><a href='http://www.capgemini.com/' target='_blank'>Cap Gemini Inc</a>: June 1999 &mdash; May 2000</li>
            <li>InterMedia LLC (now <a href='http://www.infinitecampus.com/' target='_blank'>Infinite Campus</a>): May 1997 &mdash; May 1999</li>
        </ul>

        
        
        <a name='education'></a>
        <h2>Education</h2>
        <p>
        Attended UW-Oshkosh part time from 1982 &mdash; 1988. Multiple major (Physics, History, and Art) with minors in Math and German. Earned 140 credits with a cumulative GPA of 3.45. Those credits, given the diversity of the majors and minors, did not add up to any degree.
        </p>
        <p>
        I left school for non-academic reasons. I still feel it was extraordinary worthwhile. I learned how to think effectively in multiple intellectual and creative modes. I learned how to learn.
        </p>
        <p>
        I enjoy describing myself as an Art School Dropout.
        </p>

    </div>
</body>
</html>
