<html>
<head>
    <title>What makes for good technical writing?</title>
    <link rel='stylesheet' type='text/css' href='../css/common.css'/>
</head>

<body>
    <div class='wrapper article'>
        <p>
        <a href='http://billblondeau.com'>billblondeau.com</a> home
        </p>
        
        <hr/>
        <h1>What makes for good technical writing?</h1>
        <p><em>Bill Blondeau</em></p>
        
        <p>
        This article is the first in a series. The series is a practical overview of the best ways to get good-quality technical writing done.
        </p>
        <p>
        This is largely a distillation of years' worth of work doing technical documentation of various sorts. However, a lot of it was founded on an an excellent book, <a href='http://www.worldcat.org/title/analytical-writing-a-handbook-for-business-and-technical-writers/oclc/560720' target='_blank'>Analytical Writing</a>, by Thomas P. Johnson (Harper &amp; Row, 1966). Unfortunately, the book's out of print.
        </p>
        <p>
        I was also recently pleased to acquire a copy of Anne E. Greene's book <a href='http://www.press.uchicago.edu/ucp/books/book/chicago/W/bo15288825.html' target='_blank'>Writing Science in Plain English</a>. Greene reinforces a lot of the precepts in <em>Analytical Writing</em>, and adds a lot of complementary insights, especially as applied to scientific writing and the extremely poor literary conventions imposed upon the academic world of science.
        </p>

        <h2>What to expect</h2>
        <p>
        This is an <strong>introductory</strong> article. It lays out the subject in a bare-bones fashion. There's
        </p>
        <ul>
            <li><strong>The essential principle</strong> you have to follow;</li>
            <li>One list of <strong>things you should do</strong> as a technical writer;</li>
            <li>One list of <strong>common blunders</strong> you shouldn't make;</li>
            <li>A brief description of the fundamental concept of <strong>cognitive burden</strong>;</li>
            <li>And an overview of <strong>cognitive wordsmithing</strong>, which is about crafting your prose and your page to be accessible for the reader.</li>
        </ul>

        <h3>The rest of the articles will be descendants</h3>
        <p>
        This article is big enough without detail diving. Subsequent articles will unpack the list items, and any supporting topics that deserve a fuller discussion. These descendant articles will be forward and backward linked.
        </p>
        <p>
        ...So, let's get right to it.
        </p>

        <h2>The One Essential Principle: <em>It's about the reader.</em></h2>
        <p>
        There's no more important guideline in technical writing than this: <strong>technical writing is entirely about conveying information to the reader.</strong>
        </p>
        <p>
        It's about giving her that information in a way that requires the <em>lowest reasonable effort</em> on her part. <em>She wants to understand the material</em>&mdash;that's why she's reading your article, book, or whatever. She <em>doesn't want to burn up her time and attention</em> just to make scant, laborious progress through your written work. You owe her a fair chance.
        </p>
        <p>
        You should be very much focused on reaching the reader: not emotionally, not even intellectually, but <span class='hey'>cognitively</span>. You're in the business of conveying information that the reader can assemble, in her thought, into useful and accurate structures of understanding. That's it. That's all you're doing.
        </p>
        <p>
        Compose and write for the reader's understanding, and for nothing else. If you can buckle down and truly do this, you'll be way ahead of the pack.
        </p>
        <p>
        The rest of this article, and its descendants, will discuss basic concepts, and hands-on techniques, for getting this done.
        </p>

        <h2>Technical Writing Done Right: the happy list</h2>
        <p>
        There are lots of things that you can do to help the reader grasp the material without undue effort. These are the ones that matter the most. This list is hopefully short enough, and simple enough, that it can lodge in your memory.
        </p>
        <p>
        (Remember, though: <em>simple</em> doesn't mean easy. There's work here.)
        </p>
        <p>
        This is the <strong>"Always Helpful, Never Wrong"</strong> list: the more fully you can apply these practices, the better your technical writing will be.
        </p>
        <ul>
            <li>
            <strong><span class='hey'>Don't</span> put needless cognitive burden on the reader.</strong> Technical material, by its nature, will impose certain irreducible task loads on the reader's thought. Don't make matters worse. Side excursions, misplaced detail diving, fascinating but inessential insights: try not to. Even if they seem just too cool to pass up.
            </li>
            <li>
            <strong>Organize the writing according to key concepts.</strong> Correctly identifying the essential concepts of the material is crucial. There shouldn't be too many of them. Structure your written piece around those concepts.
            </li>
            <li>
            <strong>Use headers, subheaders, blockquotes, blank lines, etc.</strong> to frame the structure.
            </li>
            <li>
            <strong>Structure pays off. Do it right.</strong> Organize the material to boost the reader's processes of understanding. Anticipate which parts will be confusing or difficult, and insert extra explanation there.
            </li>
            <li>
            <strong>Reiterate key concepts as you go. Return. Repeat. Reexamine. Remind.</strong> And try to do so in multiple contexts. Each time the reader is introduced to some different application of a key concept, she is nailing that concept down a little more firmly.
            </li>
            <li>
            <strong>Keep the details separate from the concepts.</strong> Seriously. If you introduce details to explain a point, or to make an example, make damned sure the reader knows that that's what you're up to. Don't let the reader start to feel confused about whether she's getting explanations, or supporting data.
            </li>
            <li>
            <strong>Concrete is better than abstract.</strong> Abstractions are incredibly powerful and helpful for <em>analysis</em>, but they often suck hard in introductory </em>explanations. <em>Give concrete, explicit examples before exploring the abstractions they illustrate.</em> You won't be sorry.
            </li>
            <li>
            <strong>Diagrams, if you do them right, are often immensely helpful.</strong> Giving the reader the ability to cross-check between prose and graphical representation of the same information is extremely powerful. (Poorly executed diagrams, on the other hand, are worse than useless. Know your limitations.)
            </li>
            <li>
            Speaking of diagrams: bear in mind that <strong>some readers grasp visual presentation better than verbal; some do better with verbal explanations.</strong> Do your best to support both kinds of interpretations.
            </li>
        </ul>

        <h2>Technical Writing Self-sabotage Tragedies: the sad sorrowful list</h2>
        <p>
        There are some <strong>common, deeply unfortunate, completely unfounded behaviors that technical writers often exhibit</strong>. Usually these writers mean well, and think they're doing the right thing. They are not. These things result in bad work. 
        </p>
        <p>
        Don't do these things.
        </p>
        <ul>
            <li>
            <strong><span class='hey'>Don't adopt</span> a stilted, formal, impersonal style.</strong> Many people seem to think that it's a necessary convention of the tech writing trade. It isn't. What it <em>is</em>, is a miserably bad, needlessly difficult way to communicate information to the reader.
            </li>
            <li>
            <strong><span class='hey'>Avoid</span> boilerplate, stock phrases, and meaningless conventional verbiage.</strong> Again, many people seem to feel that this kind of thing is expected; that it's polite form in the technical writing field. Again, no. This does nothing to foster understanding, and a lot to hinder it. It's just static.
            </li>
            <li>
            <strong><span class='hey'>Don't assume</span> that the reader magically knows everything that's in the forefront of <em>your</em> mind right now.</strong> She doesn't. And in a couple of weeks, you won't either. When you're thinking, "I don't have to explain <em>that!</em>" you're making a very common, and very destructive, blunder, based on a temporary cognitive state: <strong>when your head's in the game, you underestimate the game's difficulty</strong>.
            </li>
            <li>
            <strong><span class='hey'>Don't flinch back</span> from basic explanations.</strong> Many technical writers are worried that readers will feel impatient, even offended, when presented with explanations of things they already know. Not generally true. <em>Most readers will feel <strong>good</strong> when they read a clear, intelligent exposition of something they already know.</em> They will be gratified, possibly even smug. Which means that they are more than willing to pay close attention to the rest of the things you say.
            </li>
        </ul>

        <p>
        The two foregoing lists are the core practices that this article advocates. If all you do is write the bold text on your hand with a ballpoint pen, you will be better off than you were.
        </p>

        <h2>Cognitive Burden</h2>
        <p>
        Cognitive burden, in expository writing, is <strong>a measure of how much mental effort the reader has to exert in order to grasp the material you are writing about</strong>. It's related to <a href='https://en.wikipedia.org/wiki/Cognitive_load' target='_blank'>"cognitive load"</a>, a more formal term from <a href='http://en.wikipedia.org/wiki/Cognitive_psychology' target='_blank'>cognitive psychology</a>. We won't recapitulate the psychology now&mdash;the links are there, if you want to dig in&mdash;but the core practical insight we can draw from cognitive load, and apply to technical writing, is this:
        </p>
        <ul>
            <li>
            <strong>Some cognitive burden is more or less built into a given topic</strong>. It's hard to do much about that. As a writer, you can't <em>change</em> the fundamental information regarding Data Analytics, or the Bessemer Process, or the Haskell type model, into something other than what they are already known to be. As a technical writer, you're describing what is, at bottom, an immutable information set.
            </li>
            <li>
            <strong>Some cognitive burden, on the other hand, is a side effect of organization and presentation.</strong> You can make huge strides with this. You can help the reader a lot. You can <em>present</em>, you can <em>describe</em>, you can <em>explain</em> Data Analytics , the Bessemer Process, the Haskell type model, or the Oxford comma in ways that help the reader grasp what's going on. Clearly. Sensibly. With minimal work.
            </li>
        </ul>
        <p>
        As a technical writer, always focus on the second bullet: <em>changing the things that are in <strong>your</strong> territory.</em>
        </p>
        <p>
        Cognitive burden can arise in almost any part of your work.
        </p>
        <p>
        You may screw up the analysis, misidentifying key concepts, or misunderstanding them. You may fail to organize the material clearly. You may construct jumbled or unfinished explanations.
        </p>
        <p>
        Your prose might be awkward, distracting, filled with garbage. You may write paragraphs longer than <a href='http://en.wikipedia.org/wiki/William_Faulkner' target='_blank'>William Faulkner</a>, in full stream-of-consciousness mode, ever did. You may overuse abstractions. You may be a serial prepositioner. You may simply suck at writing sentences that help the reader stay with you, in the frame, in the picture.
        </p>
        <p>
        You need to learn to avoid these things, to notice them when they happen, and to know how to repair them. <strong>Aside from actual misinformation, cognitive burden is the worst thing you will ever impose on the reader.</strong> Doublecheck yourself. Work hard on recognizing and correcting cognitive burden.
        </p>
        <p>
        It says something unhappy about the field of technical writing that the level of cognitive burden is characteristically pretty high.
        </p>

        <h2>Cognitive Wordsmithing</h2>
        <p>
        This topic is the hands-on discipline of <strong>writing, and formatting, low-friction prose.</strong>
        </p>
        <p>
        This is a biggish topic, so it will be the subject of its own article. However, lest this all sound menacingly abstract, here's a pragmatic distillation of writing for minimal confusion.
        </p>

        <h3>The reflexes of incomprehension</h3>
        <p>
        Poor wordsmithing and page/text formatting can cause three undesirable reflex behaviors in the reader:
        </p>
        <ul>
            <li>
            She might start <strong>skimming</strong>, trying to get past a bad patch so she can land on something comprehensible. Skimming is typically a reflection of underlying anxiety about whether the material is worth the reader's time. Of the three reflexes of incomprehension, skimming is the least bad: she's at least still looking for an entry point into the material.
            </li>
            <li>
            She might <strong>glaze over</strong>, which is the sad situation in which she is sort of pretending to read, but is really only droning subvocally through the words <em>without any useful level of comprehension at all</em>. She's not learning anything useful.
            </li>
            <li>
            She might just <strong>bog down</strong>. This is the state at which reading grinds to a halt: the reader simply gives up. She really doesn't want to read any more of your miserable attempts at explanation. Once a reader bogs down, you're probably not getting her back.
            </li>
        </ul>

        <h3>Practical guide to cognitive wordsmithing</h3>
        <p>
        There are an awful lot of principles to follow if you want to get cognitive wordsmithing right. Here are the ones that will give you the most bang for the buck.
        </p>
        <ul>
            <li>
            <strong><span class='hey'>Don't</span> string lots of clauses together in a sentence.</strong> The confusion introduced by multiple sequential clauses scales up so quickly. The reader will get disoriented, then glaze over, bog down, or start skimming.
            </li>
            <li>
            <strong><span class='hey'>Especially don't</span> string prepositional phrases together.</strong> These are worse than ordinary clauses. Seriously: don't even start.
            </li>
            <li>
            <strong>You have paragraphs. Use them.</strong> Paragraphs form strong visual demarcations between different ideas or contexts, and make natural safe landing points for the hapless skimmer. As such, they are extremely helpful and should be used frequently. Skilled writers of English prose such as J.R.R. Tolkien (his essay <a href='http://brainstorm-services.com/wcu-2004/fairystories-tolkien.pdf' target='_blank'>"On Fairy Stories"</a> (PDF) is a good example of this kind of writing) can include very long paragraphs in their works without being confusing. But Tolkien wrote for an educated audience that was used to that kind of presentation; besides, they generally had a lot of patience and a contemplative approach.  He wasn't obliged to employ the density of concept, exposition, and context shifts that technical writing usually entails. <strong>In technical writing, shorter paragraphs are better.</strong> (Besides, really, Dear Writer: you're nowhere close to Tolkien.)
            </li>
            <li>
            <strong>Use orienting constructions.</strong> There's amazing benefit in putting simple logical prefacing words and phrases into your text: "on the other hand", "in contrast", "similarly", "confusingly", "as you'd expect", "This is very different from", "however", and so on. These expressions describe a transition between logically related contexts. They will keep the reader from losing the sense of your explanation; they will also help save her when she does go astray. Orienting constructions are worth every penny.
            </li>
            <li>
            <strong><span class='hey'>Don't</span> stack negatives.</strong> Not even the least logically challenged among us wouldn't feel reluctant to deny that there's no possible doubt about likelihood of logical reversals of sense when one is insufficiently careful to avoid non-confusing Boolean constructs.
            </li>
            <li>
            <strong>Minimize jargon.</strong> Technical content does often rely on jargon for clarity and concision. Unfortunately, many technical writers seem to feel that lots and lots of jargon lends gravitas to the work. Which, no, it doesn't. Use jargon sparingly, and only when it's meaningful and efficient. Otherwise, favor standard English.
            </li>
            <li>
            <strong>Lists are better</strong> than a sentence or paragraph riddled with conjunctions.
            </li>
            <li>
            <strong>Bold, italic, and underline formatting,</strong> properly applied to emphasize key ideas or phrases, can really help the reader as she makes her way through dense technical wording. A bolded essential phrase also makes a nice landing zone for someone caught in the skim reflex.
            </li>
        </ul>

        <h2>Go forth and sin... a little less</h2>
        <p>
        So, Dear Writer, there you have it.
        </p>
        <p>
        There are many other things you can, and should, do if you want to be a good and honorable technical writer. But if you start out by following the principles and practices sketched out here, you'll be treating your readers a lot better than if you don't.
        </p>
        <p>
        Stay tuned for further installments.
        </p>
    </div>
</body>
</html>
